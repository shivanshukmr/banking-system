data models(SQL Tables):
    user:
        - acc. no. - 6 digits, auto-increment
        - username(varchar)
        - password(varchar)
        - balance(int)
        
    transaction history:
        - user1-accno (balance decreases)
        - user2-accno (balance increases)
            (use foreign keys)
            - in case of withdrawals/deposits
                - if withdrawal  =>  user1-accno = user.accno(because balance decreases)  &  user2-accno = NULL
                - if deposit     =>  user1-accno = NULL                                   &  user2-accno = user.accno(because balance increases)
                (where user is the person withdrawing or depositing)
        - amount
        - datetime(datetime)


features:
    #-- core/users.py --#
    - create user
    - sign in
    #-- core/users.py --#

    #-- core/transfers.py --#
    - deposit and withdraw money
    - transfer money to other users
    #-- core/transfers.py --#

    #-- core/info.py --#
    - see other users
    - see transaction history
        (with other users as well as deposits/withdrawals)
    #-- core/info.py --#

(solved)
problems:
    - how to store deposits and withdraws history properly
(solved)

optional:
    - admin user that can see all transaction histories
    - ability to change password
    - delete user
    - store salted and hashed passwords

